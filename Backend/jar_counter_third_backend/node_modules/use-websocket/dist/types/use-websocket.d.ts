declare const readyStates: {
    readonly 0: "connecting";
    readonly 1: "open";
    readonly 2: "closing";
    readonly 3: "closed";
};
type ReadyState = keyof typeof readyStates;
type Status = (typeof readyStates)[ReadyState];
export interface UseWebSocketOptions {
    protocols?: string | string[];
    onOpen?: (event: Event) => void;
    onMessage?: (event: MessageEvent) => void;
    onClose?: (event: CloseEvent) => void;
    onError?: (event: Event) => void;
}
export interface UseWebSocketResult {
    webSocket: WebSocket | null;
    readyState: ReadyState;
    status: Status;
}
export declare function useWebSocket(url: string, options: UseWebSocketOptions): UseWebSocketResult;
export {};
//# sourceMappingURL=use-websocket.d.ts.map